FROM python:3.11.2-alpine3.16

ARG BUILD_DATE
ARG PIPENV_ARGS
ARG VERSION
ARG DEVELOP

RUN apk add --no-cache --virtual .fetch-deps \
        curl \
        ca-certificates \
        openssl \
        tar

RUN apk add --no-cache --virtual .build-deps \
        autoconf \
        automake \
        pkgconf \
        g++ \
        json-c-dev \
        libtool \
        libxml2-dev \
        make \
        perl

RUN apk add --no-cache --virtual .build-deps-edge \
        --repository http://dl-cdn.alpinelinux.org/alpine/edge/main \
        --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing \
        proj4-dev \
        protobuf-c-dev

RUN apk add --no-cache --virtual .postgis-rundeps \
        json-c

RUN apk add --no-cache --virtual .postgis-rundeps-edge \
        --repository http://dl-cdn.alpinelinux.org/alpine/edge/main \
        --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing \
        binutils \
        proj4 \
        protobuf-c

RUN apk add --no-cache --virtual .hope_payment_gateway-build-deps \
        freetype-dev \
        fontconfig-dev \
        jpeg-dev \
        lcms2-dev \
        libffi-dev \
        libc-dev \
        libressl \
        linux-headers \
        musl-dev \
        openjpeg-dev \
        postgresql-dev \
        python3-dev \
        tcl-dev \
        tiff-dev \
        tk-dev \
        zlib-dev

RUN apk add --no-cache --virtual .hope_payment_gateway-run-deps \
        postgresql-libs

RUN apk add --no-cache --virtual .system-run-deps \
        bash

RUN mkdir -p /code
ADD . /code
WORKDIR /code

RUN set -o pipefail && echo "DEVELOP: ${DEVELOP}" && if [ "${DEVELOP}" == "1" ]; then \
    echo "${VERSION}-develop"; \
    else \
    echo "Download package: https://github.com/unicef/hope-payment-gateway-backend/archive/${VERSION}.tar.gz" \
    && curl -L "https://github.com/unicef/hope-payment-gateway-backend/archive/${VERSION}.tar.gz" | tar -xzf - --strip-components=1; \
    fi

RUN pip install pip poetry --upgrade


RUN set -ex \
    ls -al /code \
    && find /usr/local/lib/python3.9/ -name *.pyc | xargs rm -f \
    && poetry install --verbose --system \
    && pip3 install . \
    && rm -fr /code

LABEL org.label.name="Donor Reporting Portal" \
      org.label.maintainer="ddinicola@unicef.org" \
      org.label.description="" \
      org.label.url="https://hope-payment-gateway-backend.unicef.io/" \
      org.label.vcs-url="https://github.com/unicef/hope-payment-gateway" \
      org.label.version=$VERSION


ENV VERSION ${VERSION}

ENV PIPENV_PYPI_MIRROR ${PIPENV_PYPI_MIRROR}
ENV PIPENV_ARGS ${PIPENV_ARGS}
ENV HOME /root/
ENV PYTHONUNBUFFERED 1
ENV USE_GUNICORN 0
ENV GUNICORN_WORKERS 4
ENV CELERY_LOGLEVEL "ERROR"
ENV CELERY_CONCURRENCY 2
ENV CELERY_WORKERS 1
ENV ALLOWED_HOSTS *
ENV CACHE_URL "redis://192.168.66.66:6379/1"
ENV CELERY_BROKER_URL "redis://192.168.66.66:6379/2"
ENV CELERY_RESULT_BACKEND "redis://192.168.66.66:6379/3"
ENV CSRF_COOKIE_SECURE True
ENV DATABASE_URL "postgres://postgres:@192.168.66.66:5432/hope_payment_gateway"
ENV DEBUG 0
ENV DEVELOPMENT_MODE 0
ENV DJANGO_SETTINGS_MODULE hope_payment_gateway.config.settings
ENV MEDIA_ROOT /tmp/media
ENV SECRET_KEY "secret"
ENV SECURE_BROWSER_XSS_FILTER True
ENV SECURE_CONTENT_TYPE_NOSNIFF True
ENV SECURE_FRAME_DENY True
ENV SECURE_HSTS_INCLUDE_SUBDOMAINS True
ENV SECURE_HSTS_PRELOAD True
ENV SECURE_HSTS_SECONDS 1
ENV SECURE_SSL_REDIRECT True
ENV SENTRY_DSN ""
ENV SESSION_COOKIE_HTTPONLY True
ENV SESSION_COOKIE_SECURE True
ENV STATIC_ROOT /tmp/static


EXPOSE 8000
RUN apk del .fetch-deps .build-deps .build-deps-edge .hope_payment_gateway-build-deps
RUN rm -rf /var/cache/apk/* \
    && rm -fr /root/.cache/ \
    && rm -fr /usr/include/

RUN find /usr/local/lib/python3.9/ -name *.pyc | xargs rm -f \
    && python -O -m compileall -fqb /usr/local/lib/python3.6

# removes source files
RUN find /usr/local/lib/python3.9/ -name *.py | xargs rm -f

ADD docker/entrypoint.sh /usr/local/bin/docker-entrypoint.sh
ADD docker/wait-for-it.sh /usr/local/bin/wait-for-it.sh

RUN adduser -S hope_payment_gateway \
    && mkdir -p /var/hope_payment_gateway \
    && chown hope_payment_gateway /var/hope_payment_gateway/

ENTRYPOINT ["docker-entrypoint.sh"]
WORKDIR /var/hope_payment_gateway

USER hope_payment_gateway

CMD ["hope_payment_gateway"]
